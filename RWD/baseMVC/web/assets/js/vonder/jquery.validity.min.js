  


<!DOCTYPE html>
<html>
  <head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# githubog: http://ogp.me/ns/fb/githubog#">
    <meta charset='utf-8'>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <title>validity/demo/js/jquery.validity.min.js at master · whatgoodisaroad/validity · GitHub</title>
    <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub" />
    <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub" />
    <link rel="apple-touch-icon" sizes="57x57" href="/apple-touch-icon-114.png" />
    <link rel="apple-touch-icon" sizes="114x114" href="/apple-touch-icon-114.png" />
    <link rel="apple-touch-icon" sizes="72x72" href="/apple-touch-icon-144.png" />
    <link rel="apple-touch-icon" sizes="144x144" href="/apple-touch-icon-144.png" />
    <link rel="logo" type="image/svg" href="http://github-media-downloads.s3.amazonaws.com/github-logo.svg" />
    <link rel="xhr-socket" href="/_sockets" />


    <meta name="msapplication-TileImage" content="/windows-tile.png" />
    <meta name="msapplication-TileColor" content="#ffffff" />
    <meta name="selected-link" value="repo_source" data-pjax-transient />
    <meta content="collector.githubapp.com" name="octolytics-host" /><meta content="github" name="octolytics-app-id" />

    
    
    <link rel="icon" type="image/x-icon" href="/favicon.ico" />

    <meta content="authenticity_token" name="csrf-param" />
<meta content="M33fykbB+cGOjmQS/JBnHnZQFfdp3VkTGGHyjH0iuzc=" name="csrf-token" />

    <link href="https://a248.e.akamai.net/assets.github.com/assets/github-7f97eca1f6ae06b416d9f51fdeb082b8c9f2c904.css" media="all" rel="stylesheet" type="text/css" />
    <link href="https://a248.e.akamai.net/assets.github.com/assets/github2-883c2d036f95a0fb486a5d977a84cb0b91a58353.css" media="all" rel="stylesheet" type="text/css" />
    


      <script src="https://a248.e.akamai.net/assets.github.com/assets/frameworks-92d138f450f2960501e28397a2f63b0f100590f0.js" type="text/javascript"></script>
      <script src="https://a248.e.akamai.net/assets.github.com/assets/github-332256909f33e2f207f88ec122617b6ba81328f5.js" type="text/javascript"></script>
      
      <meta http-equiv="x-pjax-version" content="f78812173f1a15aa4a4181198a00b709">

        <link data-pjax-transient rel='permalink' href='/whatgoodisaroad/validity/blob/7d3403f55a05e0f2dd6bab1bbf8729fc00b63972/demo/js/jquery.validity.min.js'>
    <meta property="og:title" content="validity"/>
    <meta property="og:type" content="githubog:gitrepository"/>
    <meta property="og:url" content="https://github.com/whatgoodisaroad/validity"/>
    <meta property="og:image" content="https://secure.gravatar.com/avatar/78c338fe6b267f5e0e91a4a5fa589984?s=420&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png"/>
    <meta property="og:site_name" content="GitHub"/>
    <meta property="og:description" content="validity - Client-Side Validation for jQuery"/>
    <meta property="twitter:card" content="summary"/>
    <meta property="twitter:site" content="@GitHub">
    <meta property="twitter:title" content="whatgoodisaroad/validity"/>

    <meta name="description" content="validity - Client-Side Validation for jQuery" />


    <meta content="340325" name="octolytics-dimension-user_id" /><meta content="1856828" name="octolytics-dimension-repository_id" />
  <link href="https://github.com/whatgoodisaroad/validity/commits/master.atom" rel="alternate" title="Recent Commits to validity:master" type="application/atom+xml" />

  </head>


  <body class="logged_out page-blob windows vis-public env-production  ">
    <div id="wrapper">

      

      
      
      

      
      <div class="header header-logged-out">
  <div class="container clearfix">

    <a class="header-logo-wordmark" href="https://github.com/">Github</a>

    <div class="header-actions">
      <a class="button primary" href="https://github.com/signup">Sign up</a>
      <a class="button" href="https://github.com/login?return_to=%2Fwhatgoodisaroad%2Fvalidity%2Fblob%2Fmaster%2Fdemo%2Fjs%2Fjquery.validity.min.js">Sign in</a>
    </div>

    <div class="command-bar js-command-bar  in-repository">


      <ul class="top-nav">
          <li class="explore"><a href="https://github.com/explore">Explore</a></li>
        <li class="features"><a href="https://github.com/features">Features</a></li>
          <li class="blog"><a href="https://github.com/blog">Blog</a></li>
      </ul>
        <form accept-charset="UTF-8" action="/search" class="command-bar-form" id="top_search_form" method="get">
  <a href="/search/advanced" class="advanced-search-icon tooltipped downwards command-bar-search" id="advanced_search" title="Advanced search"><span class="octicon octicon-gear "></span></a>

  <input type="text" data-hotkey="/ s" name="q" id="js-command-bar-field" placeholder="Search or type a command" tabindex="1" autocapitalize="off"
    
      data-repo="whatgoodisaroad/validity"
      data-branch="master"
      data-sha="bb3e2ff5aa2a2a070bf10f5c7cfb7e1aad50f68e"
  >

    <input type="hidden" name="nwo" value="whatgoodisaroad/validity" />

    <div class="select-menu js-menu-container js-select-menu search-context-select-menu">
      <span class="minibutton select-menu-button js-menu-target">
        <span class="js-select-button">This repository</span>
      </span>

      <div class="select-menu-modal-holder js-menu-content js-navigation-container">
        <div class="select-menu-modal">

          <div class="select-menu-item js-navigation-item selected">
            <span class="select-menu-item-icon octicon octicon-check"></span>
            <input type="radio" class="js-search-this-repository" name="search_target" value="repository" checked="checked" />
            <div class="select-menu-item-text js-select-button-text">This repository</div>
          </div> <!-- /.select-menu-item -->

          <div class="select-menu-item js-navigation-item">
            <span class="select-menu-item-icon octicon octicon-check"></span>
            <input type="radio" name="search_target" value="global" />
            <div class="select-menu-item-text js-select-button-text">All repositories</div>
          </div> <!-- /.select-menu-item -->

        </div>
      </div>
    </div>

  <span class="octicon help tooltipped downwards" title="Show command bar help">
    <span class="octicon octicon-question"></span>
  </span>


  <input type="hidden" name="ref" value="cmdform">

  <div class="divider-vertical"></div>

</form>
    </div>

  </div>
</div>


      

      


            <div class="site hfeed" itemscope itemtype="http://schema.org/WebPage">
      <div class="hentry">
        
        <div class="pagehead repohead instapaper_ignore readability-menu ">
          <div class="container">
            <div class="title-actions-bar">
              

<ul class="pagehead-actions">



    <li>
      <a href="/login?return_to=%2Fwhatgoodisaroad%2Fvalidity"
        class="minibutton js-toggler-target star-button entice tooltipped upwards"
        title="You must be signed in to use this feature" rel="nofollow">
        <span class="octicon octicon-star"></span>Star
      </a>
      <a class="social-count js-social-count" href="/whatgoodisaroad/validity/stargazers">
        68
      </a>
    </li>
    <li>
      <a href="/login?return_to=%2Fwhatgoodisaroad%2Fvalidity"
        class="minibutton js-toggler-target fork-button entice tooltipped upwards"
        title="You must be signed in to fork a repository" rel="nofollow">
        <span class="octicon octicon-git-branch"></span>Fork
      </a>
      <a href="/whatgoodisaroad/validity/network" class="social-count">
        37
      </a>
    </li>
</ul>

              <h1 itemscope itemtype="http://data-vocabulary.org/Breadcrumb" class="entry-title public">
                <span class="repo-label"><span>public</span></span>
                <span class="mega-octicon octicon-repo"></span>
                <span class="author vcard">
                  <a href="/whatgoodisaroad" class="url fn" itemprop="url" rel="author">
                  <span itemprop="title">whatgoodisaroad</span>
                  </a></span> /
                <strong><a href="/whatgoodisaroad/validity" class="js-current-repository">validity</a></strong>
              </h1>
            </div>

            
  <ul class="tabs">
    <li class="pulse-nav"><a href="/whatgoodisaroad/validity/pulse" class="js-selected-navigation-item " data-selected-links="pulse /whatgoodisaroad/validity/pulse" rel="nofollow"><span class="octicon octicon-pulse"></span></a></li>
    <li><a href="/whatgoodisaroad/validity" class="js-selected-navigation-item selected" data-selected-links="repo_source repo_downloads repo_commits repo_tags repo_branches /whatgoodisaroad/validity">Code</a></li>
    <li><a href="/whatgoodisaroad/validity/network" class="js-selected-navigation-item " data-selected-links="repo_network /whatgoodisaroad/validity/network">Network</a></li>
    <li><a href="/whatgoodisaroad/validity/pulls" class="js-selected-navigation-item " data-selected-links="repo_pulls /whatgoodisaroad/validity/pulls">Pull Requests <span class='counter'>0</span></a></li>

      <li><a href="/whatgoodisaroad/validity/issues" class="js-selected-navigation-item " data-selected-links="repo_issues /whatgoodisaroad/validity/issues">Issues <span class='counter'>0</span></a></li>



    <li><a href="/whatgoodisaroad/validity/graphs" class="js-selected-navigation-item " data-selected-links="repo_graphs repo_contributors /whatgoodisaroad/validity/graphs">Graphs</a></li>


  </ul>
  
<div class="tabnav">

  <span class="tabnav-right">
    <ul class="tabnav-tabs">
          <li><a href="/whatgoodisaroad/validity/tags" class="js-selected-navigation-item tabnav-tab" data-selected-links="repo_tags /whatgoodisaroad/validity/tags">Tags <span class="counter blank">0</span></a></li>
    </ul>
  </span>

  <div class="tabnav-widget scope">


    <div class="select-menu js-menu-container js-select-menu js-branch-menu">
      <a class="minibutton select-menu-button js-menu-target" data-hotkey="w" data-ref="master">
        <span class="octicon octicon-branch"></span>
        <i>branch:</i>
        <span class="js-select-button">master</span>
      </a>

      <div class="select-menu-modal-holder js-menu-content js-navigation-container">

        <div class="select-menu-modal">
          <div class="select-menu-header">
            <span class="select-menu-title">Switch branches/tags</span>
            <span class="octicon octicon-remove-close js-menu-close"></span>
          </div> <!-- /.select-menu-header -->

          <div class="select-menu-filters">
            <div class="select-menu-text-filter">
              <input type="text" id="commitish-filter-field" class="js-filterable-field js-navigation-enable" placeholder="Filter branches/tags">
            </div>
            <div class="select-menu-tabs">
              <ul>
                <li class="select-menu-tab">
                  <a href="#" data-tab-filter="branches" class="js-select-menu-tab">Branches</a>
                </li>
                <li class="select-menu-tab">
                  <a href="#" data-tab-filter="tags" class="js-select-menu-tab">Tags</a>
                </li>
              </ul>
            </div><!-- /.select-menu-tabs -->
          </div><!-- /.select-menu-filters -->

          <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket css-truncate" data-tab-filter="branches">

            <div data-filterable-for="commitish-filter-field" data-filterable-type="substring">

                <div class="select-menu-item js-navigation-item selected">
                  <span class="select-menu-item-icon octicon octicon-check"></span>
                  <a href="/whatgoodisaroad/validity/blob/master/demo/js/jquery.validity.min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="master" rel="nofollow" title="master">master</a>
                </div> <!-- /.select-menu-item -->
            </div>

              <div class="select-menu-no-results">Nothing to show</div>
          </div> <!-- /.select-menu-list -->


          <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket css-truncate" data-tab-filter="tags">
            <div data-filterable-for="commitish-filter-field" data-filterable-type="substring">

            </div>

            <div class="select-menu-no-results">Nothing to show</div>

          </div> <!-- /.select-menu-list -->

        </div> <!-- /.select-menu-modal -->
      </div> <!-- /.select-menu-modal-holder -->
    </div> <!-- /.select-menu -->

  </div> <!-- /.scope -->

  <ul class="tabnav-tabs">
    <li><a href="/whatgoodisaroad/validity" class="selected js-selected-navigation-item tabnav-tab" data-selected-links="repo_source /whatgoodisaroad/validity">Files</a></li>
    <li><a href="/whatgoodisaroad/validity/commits/master" class="js-selected-navigation-item tabnav-tab" data-selected-links="repo_commits /whatgoodisaroad/validity/commits/master">Commits</a></li>
    <li><a href="/whatgoodisaroad/validity/branches" class="js-selected-navigation-item tabnav-tab" data-selected-links="repo_branches /whatgoodisaroad/validity/branches" rel="nofollow">Branches <span class="counter ">1</span></a></li>
  </ul>

</div>

  
  
  


            
          </div>
        </div><!-- /.repohead -->

        <div id="js-repo-pjax-container" class="container context-loader-container" data-pjax-container>
          


<!-- blob contrib key: blob_contributors:v21:c5a17d5e6ba6f52778460436c55332cd -->
<!-- blob contrib frag key: views10/v8/blob_contributors:v21:c5a17d5e6ba6f52778460436c55332cd -->


<div id="slider">
    <div class="frame-meta">

      <p title="This is a placeholder element" class="js-history-link-replace hidden"></p>

        <div class="breadcrumb">
          <span class='bold'><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/whatgoodisaroad/validity" class="js-slide-to" data-branch="master" data-direction="back" itemscope="url"><span itemprop="title">validity</span></a></span></span><span class="separator"> / </span><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/whatgoodisaroad/validity/tree/master/demo" class="js-slide-to" data-branch="master" data-direction="back" itemscope="url"><span itemprop="title">demo</span></a></span><span class="separator"> / </span><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/whatgoodisaroad/validity/tree/master/demo/js" class="js-slide-to" data-branch="master" data-direction="back" itemscope="url"><span itemprop="title">js</span></a></span><span class="separator"> / </span><strong class="final-path">jquery.validity.min.js</strong> <span class="js-zeroclipboard zeroclipboard-button" data-clipboard-text="demo/js/jquery.validity.min.js" data-copied-hint="copied!" title="copy to clipboard"><span class="octicon octicon-clippy"></span></span>
        </div>

      <a href="/whatgoodisaroad/validity/find/master" class="js-slide-to" data-hotkey="t" style="display:none">Show File Finder</a>


        
  <div class="commit file-history-tease">
    <img class="main-avatar" height="24" src="https://secure.gravatar.com/avatar/78c338fe6b267f5e0e91a4a5fa589984?s=140&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png" width="24" />
    <span class="author"><a href="/whatgoodisaroad" rel="author">whatgoodisaroad</a></span>
    <time class="js-relative-date" datetime="2013-02-10T22:35:44-08:00" title="2013-02-10 22:35:44">February 10, 2013</time>
    <div class="commit-title">
        <a href="/whatgoodisaroad/validity/commit/aba2a8dcac8436682c4d3d6142651fe23e065ce5" class="message">Fix related to scroll to issue 16</a>
    </div>

    <div class="participation">
      <p class="quickstat"><a href="#blob_contributors_box" rel="facebox"><strong>1</strong> contributor</a></p>
      
    </div>
    <div id="blob_contributors_box" style="display:none">
      <h2>Users on GitHub who have contributed to this file</h2>
      <ul class="facebox-user-list">
        <li>
          <img height="24" src="https://secure.gravatar.com/avatar/78c338fe6b267f5e0e91a4a5fa589984?s=140&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png" width="24" />
          <a href="/whatgoodisaroad">whatgoodisaroad</a>
        </li>
      </ul>
    </div>
  </div>


    </div><!-- ./.frame-meta -->

    <div class="frames">
      <div class="frame" data-permalink-url="/whatgoodisaroad/validity/blob/7d3403f55a05e0f2dd6bab1bbf8729fc00b63972/demo/js/jquery.validity.min.js" data-title="validity/demo/js/jquery.validity.min.js at master · whatgoodisaroad/validity · GitHub" data-type="blob">

        <div id="files" class="bubble">
          <div class="file">
            <div class="meta">
              <div class="info">
                <span class="icon"><b class="octicon octicon-file-text"></b></span>
                <span class="mode" title="File Mode">file</span>
                  <span>38 lines (37 sloc)</span>
                <span>15.175 kb</span>
              </div>
              <div class="actions">
                <div class="button-group">
                      <a class="minibutton js-entice" href=""
                         data-entice="You must be signed in and on a branch to make or propose changes">Edit</a>
                  <a href="/whatgoodisaroad/validity/raw/master/demo/js/jquery.validity.min.js" class="button minibutton " id="raw-url">Raw</a>
                    <a href="/whatgoodisaroad/validity/blame/master/demo/js/jquery.validity.min.js" class="button minibutton ">Blame</a>
                  <a href="/whatgoodisaroad/validity/commits/master/demo/js/jquery.validity.min.js" class="button minibutton " rel="nofollow">History</a>
                </div><!-- /.button-group -->
              </div><!-- /.actions -->

            </div>
                <div class="blob-wrapper data type-javascript js-blob-data">
      <table class="file-code file-diff">
        <tr class="file-code-line">
          <td class="blob-line-nums">
            <span id="L1" rel="#L1">1</span>
<span id="L2" rel="#L2">2</span>
<span id="L3" rel="#L3">3</span>
<span id="L4" rel="#L4">4</span>
<span id="L5" rel="#L5">5</span>
<span id="L6" rel="#L6">6</span>
<span id="L7" rel="#L7">7</span>
<span id="L8" rel="#L8">8</span>
<span id="L9" rel="#L9">9</span>
<span id="L10" rel="#L10">10</span>
<span id="L11" rel="#L11">11</span>
<span id="L12" rel="#L12">12</span>
<span id="L13" rel="#L13">13</span>
<span id="L14" rel="#L14">14</span>
<span id="L15" rel="#L15">15</span>
<span id="L16" rel="#L16">16</span>
<span id="L17" rel="#L17">17</span>
<span id="L18" rel="#L18">18</span>
<span id="L19" rel="#L19">19</span>
<span id="L20" rel="#L20">20</span>
<span id="L21" rel="#L21">21</span>
<span id="L22" rel="#L22">22</span>
<span id="L23" rel="#L23">23</span>
<span id="L24" rel="#L24">24</span>
<span id="L25" rel="#L25">25</span>
<span id="L26" rel="#L26">26</span>
<span id="L27" rel="#L27">27</span>
<span id="L28" rel="#L28">28</span>
<span id="L29" rel="#L29">29</span>
<span id="L30" rel="#L30">30</span>
<span id="L31" rel="#L31">31</span>
<span id="L32" rel="#L32">32</span>
<span id="L33" rel="#L33">33</span>
<span id="L34" rel="#L34">34</span>
<span id="L35" rel="#L35">35</span>
<span id="L36" rel="#L36">36</span>
<span id="L37" rel="#L37">37</span>

          </td>
          <td class="blob-line-code">
                  <div class="highlight"><pre><div class='line' id='LC1'><span class="cm">/*</span></div><div class='line' id='LC2'><span class="cm"> * jQuery.validity ﻿v1.3.1</span></div><div class='line' id='LC3'><span class="cm"> * http://validity.thatscaptaintoyou.com/</span></div><div class='line' id='LC4'><span class="cm"> * https://github.com/whatgoodisaroad/validity</span></div><div class='line' id='LC5'><span class="cm"> * </span></div><div class='line' id='LC6'><span class="cm"> * Dual licensed under MIT and GPL</span></div><div class='line' id='LC7'><span class="cm"> *</span></div><div class='line' id='LC8'><span class="cm"> * Date: 2013-01-28 (Monday, 28 January 2013)</span></div><div class='line' id='LC9'><span class="cm"> */</span></div><div class='line' id='LC10'><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">function</span> <span class="nx">d</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">h</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="p">[];(</span><span class="nx">b</span><span class="p">.</span><span class="nx">reduction</span><span class="o">||</span><span class="nx">b</span><span class="p">).</span><span class="nx">filter</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">validity</span><span class="p">.</span><span class="nx">settings</span><span class="p">.</span><span class="nx">elementSupport</span><span class="p">).</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">c</span><span class="p">(</span><span class="k">this</span><span class="p">)</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="k">this</span><span class="p">)</span><span class="o">:</span><span class="nx">j</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">f</span><span class="p">(</span><span class="nx">h</span><span class="p">,{</span><span class="nx">field</span><span class="o">:</span><span class="nx">q</span><span class="p">(</span><span class="k">this</span><span class="p">)}))});</span><span class="nx">b</span><span class="p">.</span><span class="nx">reduction</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="k">return</span> <span class="nx">b</span><span class="p">}</span><span class="kd">function</span> <span class="nx">g</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">validity</span><span class="p">.</span><span class="nx">isValidating</span><span class="p">())</span><span class="nx">a</span><span class="p">.</span><span class="nx">validity</span><span class="p">.</span><span class="nx">report</span><span class="p">.</span><span class="nx">errors</span><span class="o">++</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">validity</span><span class="p">.</span><span class="nx">report</span><span class="p">.</span><span class="nx">valid</span><span class="o">=!</span><span class="mi">1</span><span class="p">}</span><span class="kd">function</span> <span class="nx">j</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">g</span><span class="p">();</span><span class="nx">a</span><span class="p">.</span><span class="nx">validity</span><span class="p">.</span><span class="nx">out</span><span class="p">.</span><span class="nx">raise</span><span class="p">(</span><span class="nx">a</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">c</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">i</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">g</span><span class="p">();</span><span class="nx">a</span><span class="p">.</span><span class="nx">validity</span><span class="p">.</span><span class="nx">out</span><span class="p">.</span><span class="nx">raiseAggregate</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">o</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nb">parseFloat</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">);</span><span class="nx">a</span><span class="o">+=</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="nx">b</span><span class="p">});</span><span class="k">return</span> <span class="nx">a</span><span class="p">}</span><span class="kd">function</span> <span class="nx">f</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span></div><div class='line' id='LC11'><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">h</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">h</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nb">RegExp</span><span class="p">(</span><span class="s2">&quot;#\\{&quot;</span><span class="o">+</span><span class="nx">h</span><span class="o">+</span><span class="s2">&quot;\\}&quot;</span><span class="p">,</span><span class="s2">&quot;g&quot;</span><span class="p">),</span><span class="nx">a</span><span class="p">[</span><span class="nx">h</span><span class="p">]));</span><span class="k">return</span> <span class="nx">p</span><span class="p">(</span><span class="nx">b</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">q</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">prop</span><span class="p">(</span><span class="s2">&quot;id&quot;</span><span class="p">),</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">validity</span><span class="p">.</span><span class="nx">settings</span><span class="p">.</span><span class="nx">defaultFieldName</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">prop</span><span class="p">(</span><span class="s2">&quot;title&quot;</span><span class="p">).</span><span class="nx">length</span><span class="p">)</span><span class="nx">h</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">prop</span><span class="p">(</span><span class="s2">&quot;title&quot;</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="sr">/^([A-Z0-9][a-z]*)+$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">c</span><span class="p">))</span><span class="nx">h</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/([A-Z0-9])[a-z]*/g</span><span class="p">,</span><span class="s2">&quot; $&amp;&quot;</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="sr">/^[a-z0-9]+(_[a-z0-9]+)*$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">c</span><span class="p">)){</span><span class="nx">b</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;_&quot;</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="o">++</span><span class="nx">c</span><span class="p">)</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="nx">p</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">]);</span><span class="nx">h</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">)}</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">trim</span><span class="p">(</span><span class="nx">h</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">p</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">substring</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">).</span><span class="nx">toUpperCase</span><span class="p">()</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span></div><div class='line' id='LC12'><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="o">:</span><span class="nx">b</span><span class="p">}</span><span class="kd">var</span> <span class="nx">r</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">validity</span><span class="o">=</span><span class="p">{</span><span class="nx">settings</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span><span class="nx">outputMode</span><span class="o">:</span><span class="s2">&quot;tooltip&quot;</span><span class="p">,</span><span class="nx">scrollTo</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">modalErrorsClickable</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">defaultFieldName</span><span class="o">:</span><span class="s2">&quot;This field&quot;</span><span class="p">,</span><span class="nx">elementSupport</span><span class="o">:</span><span class="s2">&quot;:text, :password, textarea, select, :radio, :checkbox, input[type=&#39;hidden&#39;], input[type=&#39;tel&#39;], input[type=&#39;email&#39;]&quot;</span><span class="p">,</span><span class="nx">argToString</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">getDate</span><span class="o">?</span><span class="p">[</span><span class="nx">b</span><span class="p">.</span><span class="nx">getMonth</span><span class="p">()</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">getDate</span><span class="p">(),</span><span class="nx">b</span><span class="p">.</span><span class="nx">getFullYear</span><span class="p">()].</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;/&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot;&quot;</span><span class="p">},</span><span class="nx">debugPrivates</span><span class="o">:!</span><span class="mi">1</span><span class="p">},{}),</span><span class="nx">patterns</span><span class="o">:</span><span class="p">{</span><span class="nx">integer</span><span class="o">:</span><span class="sr">/^\d+$/</span><span class="p">,</span><span class="nx">date</span><span class="o">:</span><span class="sr">/^((0?\d)|(1[012]))[\/-]([012]?\d|30|31)[\/-]\d{1,4}$/</span><span class="p">,</span><span class="nx">email</span><span class="o">:</span><span class="sr">/^((([a-z]|\d|[!#\$%&amp;&#39;\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&amp;&#39;\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?$/i</span><span class="p">,</span></div><div class='line' id='LC13'><span class="nx">usd</span><span class="o">:</span><span class="sr">/^\$?((\d{1,3}(,\d{3})*)|\d+)(\.(\d{2})?)?$/</span><span class="p">,</span><span class="nx">url</span><span class="o">:</span><span class="sr">/^(https?|ftp):\/\/(((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&amp;&#39;\(\)\*\+,;=]|:)*@)?(((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))|((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?)(:\d*)?)(\/((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&amp;&#39;\(\)\*\+,;=]|:|@)+(\/(([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&amp;&#39;\(\)\*\+,;=]|:|@)*)*)?)?(\?((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&amp;&#39;\(\)\*\+,;=]|:|@)|[\uE000-\uF8FF]|\/|\?)*)?(\#((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&amp;&#39;\(\)\*\+,;=]|:|@)|\/|\?)*)?$/i</span><span class="p">,</span></div><div class='line' id='LC14'><span class="nx">number</span><span class="o">:</span><span class="sr">/^[+-]?(\d+(\.\d*)?|\.\d+)([Ee]-?\d+)?$/</span><span class="p">,</span><span class="nx">zip</span><span class="o">:</span><span class="sr">/^\d{5}(-\d{4})?$/</span><span class="p">,</span><span class="nx">phone</span><span class="o">:</span><span class="sr">/^[2-9]\d{2}-\d{3}-\d{4}$/</span><span class="p">,</span><span class="nx">guid</span><span class="o">:</span><span class="sr">/^(\{?([0-9a-fA-F]){8}-(([0-9a-fA-F]){4}-){3}([0-9a-fA-F]){12}\}?)$/</span><span class="p">,</span><span class="nx">time12</span><span class="o">:</span><span class="sr">/^((0?\d)|(1[012])):[0-5]\d?\s?[aApP]\.?[mM]\.?$/</span><span class="p">,</span><span class="nx">time24</span><span class="o">:</span><span class="sr">/^(20|21|22|23|[01]\d|\d)(([:][0-5]\d){1,2})$/</span><span class="p">,</span><span class="nx">nonHtml</span><span class="o">:</span><span class="sr">/^[^&lt;&gt;]*$/</span><span class="p">},</span><span class="nx">messages</span><span class="o">:</span><span class="p">{</span><span class="nx">require</span><span class="o">:</span><span class="s2">&quot;#{field} is required.&quot;</span><span class="p">,</span><span class="nx">match</span><span class="o">:</span><span class="s2">&quot;#{field} is in an invalid format.&quot;</span><span class="p">,</span><span class="nx">integer</span><span class="o">:</span><span class="s2">&quot;#{field} must be a positive, whole number.&quot;</span><span class="p">,</span><span class="nx">date</span><span class="o">:</span><span class="s2">&quot;#{field} must be formatted as a date. (mm/dd/yyyy)&quot;</span><span class="p">,</span></div><div class='line' id='LC15'><span class="nx">email</span><span class="o">:</span><span class="s2">&quot;#{field} must be formatted as an email.&quot;</span><span class="p">,</span><span class="nx">usd</span><span class="o">:</span><span class="s2">&quot;#{field} must be formatted as a US Dollar amount.&quot;</span><span class="p">,</span><span class="nx">url</span><span class="o">:</span><span class="s2">&quot;#{field} must be formatted as a URL.&quot;</span><span class="p">,</span><span class="nx">number</span><span class="o">:</span><span class="s2">&quot;#{field} must be formatted as a number.&quot;</span><span class="p">,</span><span class="nx">zip</span><span class="o">:</span><span class="s2">&quot;#{field} must be formatted as a zipcode ##### or #####-####.&quot;</span><span class="p">,</span><span class="nx">phone</span><span class="o">:</span><span class="s2">&quot;#{field} must be formatted as a phone number ###-###-####.&quot;</span><span class="p">,</span><span class="nx">guid</span><span class="o">:</span><span class="s2">&quot;#{field} must be formatted as a guid like {3F2504E0-4F89-11D3-9A0C-0305E82C3301}.&quot;</span><span class="p">,</span><span class="nx">time24</span><span class="o">:</span><span class="s2">&quot;#{field} must be formatted as a 24 hour time: 23:00.&quot;</span><span class="p">,</span><span class="nx">time12</span><span class="o">:</span><span class="s2">&quot;#{field} must be formatted as a 12 hour time: 12:00 AM/PM&quot;</span><span class="p">,</span></div><div class='line' id='LC16'><span class="nx">lessThan</span><span class="o">:</span><span class="s2">&quot;#{field} must be less than #{max}.&quot;</span><span class="p">,</span><span class="nx">lessThanOrEqualTo</span><span class="o">:</span><span class="s2">&quot;#{field} must be less than or equal to #{max}.&quot;</span><span class="p">,</span><span class="nx">greaterThan</span><span class="o">:</span><span class="s2">&quot;#{field} must be greater than #{min}.&quot;</span><span class="p">,</span><span class="nx">greaterThanOrEqualTo</span><span class="o">:</span><span class="s2">&quot;#{field} must be greater than or equal to #{min}.&quot;</span><span class="p">,</span><span class="nx">range</span><span class="o">:</span><span class="s2">&quot;#{field} must be between #{min} and #{max}.&quot;</span><span class="p">,</span><span class="nx">tooLong</span><span class="o">:</span><span class="s2">&quot;#{field} cannot be longer than #{max} characters.&quot;</span><span class="p">,</span><span class="nx">tooShort</span><span class="o">:</span><span class="s2">&quot;#{field} cannot be shorter than #{min} characters.&quot;</span><span class="p">,</span><span class="nx">nonHtml</span><span class="o">:</span><span class="s2">&quot;#{field} cannot contain HTML characters.&quot;</span><span class="p">,</span><span class="nx">alphabet</span><span class="o">:</span><span class="s2">&quot;#{field} contains disallowed characters.&quot;</span><span class="p">,</span></div><div class='line' id='LC17'><span class="nx">minCharClass</span><span class="o">:</span><span class="s2">&quot;#{field} cannot have more than #{min} #{charClass} characters.&quot;</span><span class="p">,</span><span class="nx">maxCharClass</span><span class="o">:</span><span class="s2">&quot;#{field} cannot have less than #{min} #{charClass} characters.&quot;</span><span class="p">,</span><span class="nx">equal</span><span class="o">:</span><span class="s2">&quot;Values don&#39;t match.&quot;</span><span class="p">,</span><span class="nx">distinct</span><span class="o">:</span><span class="s2">&quot;A value was repeated.&quot;</span><span class="p">,</span><span class="nx">sum</span><span class="o">:</span><span class="s2">&quot;Values don&#39;t add to #{sum}.&quot;</span><span class="p">,</span><span class="nx">sumMax</span><span class="o">:</span><span class="s2">&quot;The sum of the values must be less than #{max}.&quot;</span><span class="p">,</span><span class="nx">sumMin</span><span class="o">:</span><span class="s2">&quot;The sum of the values must be greater than #{min}.&quot;</span><span class="p">,</span><span class="nx">radioChecked</span><span class="o">:</span><span class="s2">&quot;The selected value is not valid.&quot;</span><span class="p">,</span><span class="nx">generic</span><span class="o">:</span><span class="s2">&quot;Invalid.&quot;</span><span class="p">},</span><span class="nx">out</span><span class="o">:</span><span class="p">{</span><span class="nx">start</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">defer</span><span class="p">(</span><span class="s2">&quot;start&quot;</span><span class="p">)},</span><span class="nx">end</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">defer</span><span class="p">(</span><span class="s2">&quot;end&quot;</span><span class="p">,</span></div><div class='line' id='LC18'><span class="nx">b</span><span class="p">)},</span><span class="nx">raise</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">defer</span><span class="p">(</span><span class="s2">&quot;raise&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">)},</span><span class="nx">raiseAggregate</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">defer</span><span class="p">(</span><span class="s2">&quot;raiseAggregate&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">)},</span><span class="nx">defer</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">validity</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">outputs</span><span class="p">[</span><span class="nx">c</span><span class="p">.</span><span class="nx">settings</span><span class="p">.</span><span class="nx">outputMode</span><span class="p">];</span><span class="nx">c</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">apply</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">slice</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">arguments</span><span class="p">,</span><span class="mi">1</span><span class="p">))}},</span><span class="nx">charClasses</span><span class="o">:</span><span class="p">{</span><span class="nx">alphabetical</span><span class="o">:</span><span class="sr">/\w/g</span><span class="p">,</span><span class="nx">numeric</span><span class="o">:</span><span class="sr">/\d/g</span><span class="p">,</span><span class="nx">alphanumeric</span><span class="o">:</span><span class="sr">/[A-Za-z0-9]/g</span><span class="p">,</span><span class="nx">symbol</span><span class="o">:</span><span class="sr">/[^A-Za-z0-9]/g</span><span class="p">},</span><span class="nx">outputs</span><span class="o">:</span><span class="p">{},</span><span class="nx">__private</span><span class="o">:</span><span class="nx">e</span><span class="p">,</span><span class="nx">setup</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">settings</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">settings</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">__private</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">settings</span><span class="p">.</span><span class="nx">debugPrivates</span><span class="o">?</span><span class="nx">r</span><span class="o">:</span><span class="nx">e</span><span class="p">},</span><span class="nx">report</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">isValidating</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="o">!!</span><span class="k">this</span><span class="p">.</span><span class="nx">report</span><span class="p">},</span></div><div class='line' id='LC19'><span class="nx">start</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">out</span><span class="p">.</span><span class="nx">start</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">report</span><span class="o">=</span><span class="p">{</span><span class="nx">errors</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">valid</span><span class="o">:!</span><span class="mi">0</span><span class="p">}},</span><span class="nx">end</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">report</span><span class="o">||</span><span class="p">{</span><span class="nx">errors</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">valid</span><span class="o">:!</span><span class="mi">0</span><span class="p">};</span><span class="k">this</span><span class="p">.</span><span class="nx">report</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">out</span><span class="p">.</span><span class="nx">end</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="k">return</span> <span class="nx">b</span><span class="p">},</span><span class="nx">clear</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">start</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">end</span><span class="p">()}};</span><span class="nx">a</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span><span class="nx">validity</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">tagName</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()</span><span class="o">==</span><span class="s2">&quot;form&quot;</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">typeof</span> <span class="nx">b</span><span class="o">==</span><span class="s2">&quot;string&quot;</span><span class="o">?</span><span class="nx">c</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">a</span><span class="p">(</span><span class="nx">b</span><span class="p">).</span><span class="nx">require</span><span class="p">()}</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">);</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;submit&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">a</span><span class="p">.</span><span class="nx">validity</span><span class="p">.</span><span class="nx">start</span><span class="p">();</span><span class="nx">c</span><span class="p">();</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">validity</span><span class="p">.</span><span class="nx">end</span><span class="p">().</span><span class="nx">valid</span><span class="p">})}})},</span><span class="nx">require</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">d</span><span class="p">(</span><span class="k">this</span><span class="p">,</span></div><div class='line' id='LC20'><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span><span class="o">!!</span><span class="nx">a</span><span class="p">(</span><span class="nx">b</span><span class="p">).</span><span class="nx">val</span><span class="p">().</span><span class="nx">length</span><span class="p">},</span><span class="nx">b</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">validity</span><span class="p">.</span><span class="nx">messages</span><span class="p">.</span><span class="nx">require</span><span class="p">)},</span><span class="nx">match</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">c</span><span class="p">)</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">validity</span><span class="p">.</span><span class="nx">messages</span><span class="p">.</span><span class="nx">match</span><span class="p">,</span><span class="k">typeof</span> <span class="nx">b</span><span class="o">===</span><span class="s2">&quot;string&quot;</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">validity</span><span class="p">.</span><span class="nx">messages</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">validity</span><span class="p">.</span><span class="nx">messages</span><span class="p">[</span><span class="nx">b</span><span class="p">]);</span><span class="k">typeof</span> <span class="nx">b</span><span class="o">==</span><span class="s2">&quot;string&quot;</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">validity</span><span class="p">.</span><span class="nx">patterns</span><span class="p">[</span><span class="nx">b</span><span class="p">]);</span><span class="k">return</span> <span class="nx">d</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">?</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">.</span><span class="nx">length</span><span class="o">||</span><span class="nx">b</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">)}</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">global</span><span class="p">)</span><span class="nx">b</span><span class="p">.</span><span class="nx">lastIndex</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">return</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">.</span><span class="nx">length</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">)},</span><span class="nx">c</span><span class="p">)},</span><span class="nx">range</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">h</span><span class="p">){</span><span class="k">return</span> <span class="nx">d</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">getTime</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">getTime</span><span class="o">?</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="o">&gt;=</span></div><div class='line' id='LC21'><span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="o">&lt;=</span><span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="nx">c</span><span class="p">)}</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">substring</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">substring</span><span class="o">&amp;&amp;</span><span class="nx">Big</span><span class="o">?</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="k">new</span> <span class="nx">Big</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">greaterThanOrEqualTo</span><span class="p">(</span><span class="k">new</span> <span class="nx">Big</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">lessThanOrEqualTo</span><span class="p">(</span><span class="k">new</span> <span class="nx">Big</span><span class="p">(</span><span class="nx">c</span><span class="p">))}</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="o">&gt;=</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="o">&lt;=</span><span class="nx">c</span><span class="p">},</span><span class="nx">h</span><span class="o">||</span><span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">validity</span><span class="p">.</span><span class="nx">messages</span><span class="p">.</span><span class="nx">range</span><span class="p">,{</span><span class="nx">min</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">validity</span><span class="p">.</span><span class="nx">settings</span><span class="p">.</span><span class="nx">argToString</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">max</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">validity</span><span class="p">.</span><span class="nx">settings</span><span class="p">.</span><span class="nx">argToString</span><span class="p">(</span><span class="nx">c</span><span class="p">)}))},</span><span class="nx">greaterThan</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nx">d</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">getTime</span><span class="o">?</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">)</span><span class="o">&gt;</span><span class="nx">b</span><span class="p">}</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">substring</span><span class="o">&amp;&amp;</span><span class="nx">Big</span><span class="o">?</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="p">(</span><span class="k">new</span> <span class="nx">Big</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">)).</span><span class="nx">greaterThan</span><span class="p">(</span><span class="k">new</span> <span class="nx">Big</span><span class="p">(</span><span class="nx">b</span><span class="p">))}</span><span class="o">:</span></div><div class='line' id='LC22'><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nb">parseFloat</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">)</span><span class="o">&gt;</span><span class="nx">b</span><span class="p">},</span><span class="nx">c</span><span class="o">||</span><span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">validity</span><span class="p">.</span><span class="nx">messages</span><span class="p">.</span><span class="nx">greaterThan</span><span class="p">,{</span><span class="nx">min</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">validity</span><span class="p">.</span><span class="nx">settings</span><span class="p">.</span><span class="nx">argToString</span><span class="p">(</span><span class="nx">b</span><span class="p">)}))},</span><span class="nx">greaterThanOrEqualTo</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nx">d</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">getTime</span><span class="o">?</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">)</span><span class="o">&gt;=</span><span class="nx">b</span><span class="p">}</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">substring</span><span class="o">&amp;&amp;</span><span class="nx">Big</span><span class="o">?</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="p">(</span><span class="k">new</span> <span class="nx">Big</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">)).</span><span class="nx">greaterThanOrEqualTo</span><span class="p">(</span><span class="k">new</span> <span class="nx">Big</span><span class="p">(</span><span class="nx">b</span><span class="p">))}</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nb">parseFloat</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">)</span><span class="o">&gt;=</span><span class="nx">b</span><span class="p">},</span><span class="nx">c</span><span class="o">||</span><span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">validity</span><span class="p">.</span><span class="nx">messages</span><span class="p">.</span><span class="nx">greaterThanOrEqualTo</span><span class="p">,{</span><span class="nx">min</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">validity</span><span class="p">.</span><span class="nx">settings</span><span class="p">.</span><span class="nx">argToString</span><span class="p">(</span><span class="nx">b</span><span class="p">)}))},</span><span class="nx">lessThan</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nx">d</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">getTime</span><span class="o">?</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">)</span><span class="o">&lt;</span></div><div class='line' id='LC23'><span class="nx">b</span><span class="p">}</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">substring</span><span class="o">&amp;&amp;</span><span class="nx">Big</span><span class="o">?</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="p">(</span><span class="k">new</span> <span class="nx">Big</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">)).</span><span class="nx">lessThan</span><span class="p">(</span><span class="k">new</span> <span class="nx">Big</span><span class="p">(</span><span class="nx">b</span><span class="p">))}</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nb">parseFloat</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">)</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">},</span><span class="nx">c</span><span class="o">||</span><span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">validity</span><span class="p">.</span><span class="nx">messages</span><span class="p">.</span><span class="nx">lessThan</span><span class="p">,{</span><span class="nx">max</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">validity</span><span class="p">.</span><span class="nx">settings</span><span class="p">.</span><span class="nx">argToString</span><span class="p">(</span><span class="nx">b</span><span class="p">)}))},</span><span class="nx">lessThanOrEqualTo</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nx">d</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">getTime</span><span class="o">?</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">)</span><span class="o">&lt;=</span><span class="nx">b</span><span class="p">}</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">substring</span><span class="o">&amp;&amp;</span><span class="nx">Big</span><span class="o">?</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="p">(</span><span class="k">new</span> <span class="nx">Big</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">)).</span><span class="nx">lessThanOrEqualTo</span><span class="p">(</span><span class="k">new</span> <span class="nx">Big</span><span class="p">(</span><span class="nx">b</span><span class="p">))}</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nb">parseFloat</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">)</span><span class="o">&lt;=</span><span class="nx">b</span><span class="p">},</span><span class="nx">c</span><span class="o">||</span><span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">validity</span><span class="p">.</span><span class="nx">messages</span><span class="p">.</span><span class="nx">lessThanOrEqualTo</span><span class="p">,{</span><span class="nx">max</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">validity</span><span class="p">.</span><span class="nx">settings</span><span class="p">.</span><span class="nx">argToString</span><span class="p">(</span><span class="nx">b</span><span class="p">)}))},</span></div><div class='line' id='LC24'><span class="nx">maxLength</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nx">d</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">.</span><span class="nx">length</span><span class="o">&lt;=</span><span class="nx">b</span><span class="p">},</span><span class="nx">c</span><span class="o">||</span><span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">validity</span><span class="p">.</span><span class="nx">messages</span><span class="p">.</span><span class="nx">tooLong</span><span class="p">,{</span><span class="nx">max</span><span class="o">:</span><span class="nx">b</span><span class="p">}))},</span><span class="nx">minLength</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nx">d</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;=</span><span class="nx">b</span><span class="p">},</span><span class="nx">c</span><span class="o">||</span><span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">validity</span><span class="p">.</span><span class="nx">messages</span><span class="p">.</span><span class="nx">tooShort</span><span class="p">,{</span><span class="nx">min</span><span class="o">:</span><span class="nx">b</span><span class="p">}))},</span><span class="nx">alphabet</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="p">[];</span><span class="k">return</span> <span class="nx">d</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="o">++</span><span class="nx">c</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">c</span><span class="p">))</span><span class="o">==-</span><span class="mi">1</span><span class="p">)</span><span class="k">return</span> <span class="nx">h</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="nx">c</span><span class="p">)),</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">},</span><span class="nx">c</span><span class="o">||</span><span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">validity</span><span class="p">.</span><span class="nx">messages</span><span class="p">.</span><span class="nx">alphabet</span><span class="p">,{</span><span class="nx">chars</span><span class="o">:</span><span class="nx">h</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;, &quot;</span><span class="p">)}))},</span><span class="nx">minCharClass</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">h</span><span class="p">){</span><span class="k">typeof</span> <span class="nx">b</span><span class="o">==</span></div><div class='line' id='LC25'><span class="s2">&quot;string&quot;</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">(),</span><span class="nx">a</span><span class="p">.</span><span class="nx">validity</span><span class="p">.</span><span class="nx">charClasses</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">validity</span><span class="p">.</span><span class="nx">charClasses</span><span class="p">[</span><span class="nx">b</span><span class="p">]));</span><span class="k">return</span> <span class="nx">d</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">||</span><span class="p">[]).</span><span class="nx">length</span><span class="o">&gt;=</span><span class="nx">c</span><span class="p">},</span><span class="nx">h</span><span class="o">||</span><span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">validity</span><span class="p">.</span><span class="nx">messages</span><span class="p">.</span><span class="nx">minCharClass</span><span class="p">,{</span><span class="nx">min</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">charClass</span><span class="o">:</span><span class="nx">b</span><span class="p">}))},</span><span class="nx">maxCharClass</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">h</span><span class="p">){</span><span class="k">typeof</span> <span class="nx">b</span><span class="o">==</span><span class="s2">&quot;string&quot;</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">(),</span><span class="nx">a</span><span class="p">.</span><span class="nx">validity</span><span class="p">.</span><span class="nx">charClasses</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">validity</span><span class="p">.</span><span class="nx">charClasses</span><span class="p">[</span><span class="nx">b</span><span class="p">]));</span><span class="k">return</span> <span class="nx">d</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">||</span><span class="p">[]).</span><span class="nx">length</span><span class="o">&lt;=</span><span class="nx">c</span><span class="p">},</span><span class="nx">h</span><span class="o">||</span><span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">validity</span><span class="p">.</span><span class="nx">messages</span><span class="p">.</span><span class="nx">maxCharClass</span><span class="p">,{</span><span class="nx">max</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">charClass</span><span class="o">:</span><span class="nx">b</span><span class="p">}))},</span><span class="nx">nonHtml</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">d</span><span class="p">(</span><span class="k">this</span><span class="p">,</span></div><div class='line' id='LC26'><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">validity</span><span class="p">.</span><span class="nx">patterns</span><span class="p">.</span><span class="nx">nonHtml</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">value</span><span class="p">)},</span><span class="nx">b</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">validity</span><span class="p">.</span><span class="nx">messages</span><span class="p">.</span><span class="nx">nonHtml</span><span class="p">)},</span><span class="nx">equal</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">reduction</span><span class="o">||</span><span class="k">this</span><span class="p">).</span><span class="nx">filter</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">validity</span><span class="p">.</span><span class="nx">settings</span><span class="p">.</span><span class="nx">elementSupport</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">},</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">validity</span><span class="p">.</span><span class="nx">messages</span><span class="p">.</span><span class="nx">equal</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">?</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="k">typeof</span> <span class="nx">c</span><span class="o">==</span><span class="s2">&quot;string&quot;</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="nx">c</span><span class="p">))</span><span class="o">:</span><span class="k">typeof</span> <span class="nx">b</span><span class="o">==</span><span class="s2">&quot;string&quot;</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="nx">b</span><span class="p">);</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">e</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">)}),</span><span class="nx">l</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">m</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">k</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">k</span> <span class="k">in</span> <span class="nx">f</span><span class="p">)</span><span class="nx">f</span><span class="p">[</span><span class="nx">k</span><span class="p">]</span><span class="o">!=</span><span class="nx">l</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">m</span><span class="o">=!</span><span class="mi">1</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">m</span><span class="p">)</span><span class="nx">i</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">g</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">reduction</span><span class="o">=</span><span class="nx">a</span><span class="p">([])}</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">distinct</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">reduction</span><span class="o">||</span></div><div class='line' id='LC27'><span class="k">this</span><span class="p">).</span><span class="nx">filter</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">validity</span><span class="p">.</span><span class="nx">settings</span><span class="p">.</span><span class="nx">elementSupport</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">},</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">validity</span><span class="p">.</span><span class="nx">messages</span><span class="p">.</span><span class="nx">distinct</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="p">[],</span><span class="nx">l</span><span class="o">=</span><span class="p">[],</span><span class="nx">m</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">?</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="k">typeof</span> <span class="nx">c</span><span class="o">==</span><span class="s2">&quot;string&quot;</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="nx">c</span><span class="p">))</span><span class="o">:</span><span class="k">typeof</span> <span class="nx">b</span><span class="o">==</span><span class="s2">&quot;string&quot;</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="nx">b</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">k</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">e</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">)}),</span><span class="nx">n</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">n</span><span class="o">&lt;</span><span class="nx">k</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="o">++</span><span class="nx">n</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">k</span><span class="p">[</span><span class="nx">n</span><span class="p">].</span><span class="nx">length</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">j</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">j</span><span class="o">&lt;</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="o">++</span><span class="nx">j</span><span class="p">)</span><span class="nx">f</span><span class="p">[</span><span class="nx">j</span><span class="p">]</span><span class="o">==</span><span class="nx">k</span><span class="p">[</span><span class="nx">n</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">m</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">l</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">k</span><span class="p">[</span><span class="nx">n</span><span class="p">]));</span><span class="nx">f</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">k</span><span class="p">[</span><span class="nx">n</span><span class="p">])}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">m</span><span class="p">){</span><span class="nx">l</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">unique</span><span class="p">(</span><span class="nx">l</span><span class="p">);</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">m</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">m</span><span class="p">;</span><span class="o">++</span><span class="nx">f</span><span class="p">)</span><span class="nx">i</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">filter</span><span class="p">(</span><span class="s2">&quot;[value=&#39;&quot;</span><span class="o">+</span><span class="nx">l</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">+</span><span class="s2">&quot;&#39;]&quot;</span><span class="p">),</span><span class="nx">g</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">reduction</span><span class="o">=</span><span class="nx">a</span><span class="p">([])}}</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">sum</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span></div><div class='line' id='LC28'><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">reduction</span><span class="o">||</span><span class="k">this</span><span class="p">).</span><span class="nx">filter</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">validity</span><span class="p">.</span><span class="nx">settings</span><span class="p">.</span><span class="nx">elementSupport</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="o">!=</span><span class="nx">o</span><span class="p">(</span><span class="nx">d</span><span class="p">))</span><span class="nx">i</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">c</span><span class="o">||</span><span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">validity</span><span class="p">.</span><span class="nx">messages</span><span class="p">.</span><span class="nx">sum</span><span class="p">,{</span><span class="nx">sum</span><span class="o">:</span><span class="nx">b</span><span class="p">})),</span><span class="k">this</span><span class="p">.</span><span class="nx">reduction</span><span class="o">=</span><span class="nx">a</span><span class="p">([]);</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">sumMax</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">reduction</span><span class="o">||</span><span class="k">this</span><span class="p">).</span><span class="nx">filter</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">validity</span><span class="p">.</span><span class="nx">settings</span><span class="p">.</span><span class="nx">elementSupport</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">o</span><span class="p">(</span><span class="nx">d</span><span class="p">))</span><span class="nx">i</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">c</span><span class="o">||</span><span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">validity</span><span class="p">.</span><span class="nx">messages</span><span class="p">.</span><span class="nx">sumMax</span><span class="p">,{</span><span class="nx">max</span><span class="o">:</span><span class="nx">b</span><span class="p">})),</span><span class="k">this</span><span class="p">.</span><span class="nx">reduction</span><span class="o">=</span><span class="nx">a</span><span class="p">([]);</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">sumMin</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">reduction</span><span class="o">||</span><span class="k">this</span><span class="p">).</span><span class="nx">filter</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">validity</span><span class="p">.</span><span class="nx">settings</span><span class="p">.</span><span class="nx">elementSupport</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="o">&gt;</span><span class="nx">o</span><span class="p">(</span><span class="nx">d</span><span class="p">))</span><span class="nx">i</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">c</span><span class="o">||</span><span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">validity</span><span class="p">.</span><span class="nx">messages</span><span class="p">.</span><span class="nx">sumMin</span><span class="p">,</span></div><div class='line' id='LC29'><span class="p">{</span><span class="nx">min</span><span class="o">:</span><span class="nx">b</span><span class="p">})),</span><span class="k">this</span><span class="p">.</span><span class="nx">reduction</span><span class="o">=</span><span class="nx">a</span><span class="p">([]);</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">radioChecked</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">reduction</span><span class="o">||</span><span class="k">this</span><span class="p">).</span><span class="nx">filter</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">validity</span><span class="p">.</span><span class="nx">settings</span><span class="p">.</span><span class="nx">elementSupport</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">is</span><span class="p">(</span><span class="s2">&quot;:radio&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="s2">&quot;:checked&quot;</span><span class="p">).</span><span class="nx">val</span><span class="p">()</span><span class="o">!=</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">i</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">c</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">validity</span><span class="p">.</span><span class="nx">messages</span><span class="p">.</span><span class="nx">radioChecked</span><span class="p">)},</span><span class="nx">radioNotChecked</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">reduction</span><span class="o">||</span><span class="k">this</span><span class="p">).</span><span class="nx">filter</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">validity</span><span class="p">.</span><span class="nx">settings</span><span class="p">.</span><span class="nx">elementSupport</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">is</span><span class="p">(</span><span class="s2">&quot;:radio&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">filter</span><span class="p">(</span><span class="s2">&quot;:checked&quot;</span><span class="p">).</span><span class="nx">val</span><span class="p">()</span><span class="o">==</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">i</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">c</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">validity</span><span class="p">.</span><span class="nx">messages</span><span class="p">.</span><span class="nx">radioChecked</span><span class="p">)},</span><span class="nx">checkboxChecked</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">reduction</span><span class="o">||</span><span class="k">this</span><span class="p">).</span><span class="nx">filter</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">validity</span><span class="p">.</span><span class="nx">settings</span><span class="p">.</span><span class="nx">elementSupport</span><span class="p">);</span></div><div class='line' id='LC30'><span class="nx">c</span><span class="p">.</span><span class="nx">is</span><span class="p">(</span><span class="s2">&quot;:checkbox&quot;</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="nx">c</span><span class="p">.</span><span class="nx">is</span><span class="p">(</span><span class="s2">&quot;:checked&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">i</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">validity</span><span class="p">.</span><span class="nx">messages</span><span class="p">.</span><span class="nx">radioChecked</span><span class="p">)},</span><span class="nx">assert</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">reduction</span><span class="o">||</span><span class="k">this</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span><span class="k">return</span> <span class="nx">d</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">validity</span><span class="p">.</span><span class="nx">messages</span><span class="p">.</span><span class="nx">generic</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">b</span><span class="p">)</span><span class="nx">i</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">c</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">validity</span><span class="p">.</span><span class="nx">messages</span><span class="p">.</span><span class="nx">generic</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">reduction</span><span class="o">=</span><span class="nx">a</span><span class="p">([]);</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">fail</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">assert</span><span class="p">(</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="nx">a</span><span class="p">)}});</span><span class="nx">r</span><span class="o">=</span><span class="p">{</span><span class="nx">validate</span><span class="o">:</span><span class="nx">d</span><span class="p">,</span><span class="nx">addToReport</span><span class="o">:</span><span class="nx">g</span><span class="p">,</span><span class="nx">raiseError</span><span class="o">:</span><span class="nx">j</span><span class="p">,</span><span class="nx">raiseAggregateError</span><span class="o">:</span><span class="nx">i</span><span class="p">,</span><span class="nx">numericSum</span><span class="o">:</span><span class="nx">o</span><span class="p">,</span><span class="nx">format</span><span class="o">:</span><span class="nx">f</span><span class="p">,</span><span class="nx">infer</span><span class="o">:</span><span class="nx">q</span><span class="p">,</span><span class="nx">capitalize</span><span class="o">:</span><span class="nx">p</span><span class="p">}})(</span><span class="nx">jQuery</span><span class="p">);(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">validity</span><span class="p">.</span><span class="nx">outputs</span><span class="p">.</span><span class="nx">tooltip</span><span class="o">=</span><span class="p">{</span><span class="nx">tooltipClass</span><span class="o">:</span><span class="s2">&quot;validity-tooltip&quot;</span><span class="p">,</span><span class="nx">start</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="nx">a</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">validity</span><span class="p">.</span><span class="nx">outputs</span><span class="p">.</span><span class="nx">tooltip</span><span class="p">.</span><span class="nx">tooltipClass</span><span class="p">).</span><span class="nx">remove</span><span class="p">()},</span><span class="nx">end</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="o">!</span><span class="nx">e</span><span class="p">.</span><span class="nx">valid</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">validity</span><span class="p">.</span><span class="nx">settings</span><span class="p">.</span><span class="nx">scrollTo</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">(</span><span class="s2">&quot;body&quot;</span><span class="p">).</span><span class="nx">scrollTop</span><span class="p">(</span><span class="nx">a</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">validity</span><span class="p">.</span><span class="nx">outputs</span><span class="p">.</span><span class="nx">tooltip</span><span class="p">.</span><span class="nx">tooltipClass</span><span class="p">).</span><span class="nx">offset</span><span class="p">().</span><span class="nx">top</span><span class="p">)},</span><span class="nx">raise</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">offset</span><span class="p">();</span><span class="nx">g</span><span class="p">.</span><span class="nx">left</span><span class="o">+=</span><span class="nx">e</span><span class="p">.</span><span class="nx">width</span><span class="p">()</span><span class="o">+</span><span class="mi">18</span><span class="p">;</span><span class="nx">g</span><span class="p">.</span><span class="nx">top</span><span class="o">+=</span><span class="mi">8</span><span class="p">;</span><span class="nx">a</span><span class="p">(</span><span class="s1">&#39;&lt;div class=&quot;validity-tooltip&quot;&gt;&#39;</span><span class="o">+</span><span class="nx">d</span><span class="o">+</span><span class="s1">&#39;&lt;div class=&quot;validity-tooltip-outer&quot;&gt;&lt;div class=&quot;validity-tooltip-inner&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&#39;</span><span class="p">).</span><span class="nx">click</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">e</span><span class="p">.</span><span class="nx">focus</span><span class="p">();</span></div><div class='line' id='LC31'><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">fadeOut</span><span class="p">()}).</span><span class="nx">css</span><span class="p">(</span><span class="nx">g</span><span class="p">).</span><span class="nx">hide</span><span class="p">().</span><span class="nx">appendTo</span><span class="p">(</span><span class="s2">&quot;body&quot;</span><span class="p">).</span><span class="nx">fadeIn</span><span class="p">()},</span><span class="nx">raiseAggregate</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">raise</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">filter</span><span class="p">(</span><span class="s2">&quot;:last&quot;</span><span class="p">),</span><span class="nx">d</span><span class="p">)}}})(</span><span class="nx">jQuery</span><span class="p">);</span></div><div class='line' id='LC32'><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">function</span> <span class="nx">e</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;id&quot;</span><span class="p">).</span><span class="nx">length</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;id&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;name&quot;</span><span class="p">)}</span><span class="nx">a</span><span class="p">.</span><span class="nx">validity</span><span class="p">.</span><span class="nx">outputs</span><span class="p">.</span><span class="nx">label</span><span class="o">=</span><span class="p">{</span><span class="nx">cssClass</span><span class="o">:</span><span class="s2">&quot;error&quot;</span><span class="p">,</span><span class="nx">start</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="nx">a</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">validity</span><span class="p">.</span><span class="nx">outputs</span><span class="p">.</span><span class="nx">label</span><span class="p">.</span><span class="nx">cssClass</span><span class="p">).</span><span class="nx">remove</span><span class="p">()},</span><span class="nx">end</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">d</span><span class="p">.</span><span class="nx">valid</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">validity</span><span class="p">.</span><span class="nx">settings</span><span class="p">.</span><span class="nx">scrollTo</span><span class="p">)</span><span class="nx">location</span><span class="p">.</span><span class="nx">hash</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">validity</span><span class="p">.</span><span class="nx">outputs</span><span class="p">.</span><span class="nx">label</span><span class="p">.</span><span class="nx">cssClass</span><span class="o">+</span><span class="s2">&quot;:eq(0)&quot;</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;for&quot;</span><span class="p">)},</span><span class="nx">raise</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">g</span><span class="p">){</span><span class="kd">var</span> <span class="nx">j</span><span class="o">=</span><span class="s2">&quot;.&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">validity</span><span class="p">.</span><span class="nx">outputs</span><span class="p">.</span><span class="nx">label</span><span class="p">.</span><span class="nx">cssClass</span><span class="o">+</span><span class="s2">&quot;[for=&#39;&quot;</span><span class="o">+</span><span class="nx">e</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;&#39;]&quot;</span><span class="p">;</span><span class="nx">a</span><span class="p">(</span><span class="nx">j</span><span class="p">).</span><span class="nx">length</span><span class="o">?</span><span class="nx">a</span><span class="p">(</span><span class="nx">j</span><span class="p">).</span><span class="nx">text</span><span class="p">(</span><span class="nx">g</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">(</span><span class="s2">&quot;&lt;label/&gt;&quot;</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;for&quot;</span><span class="p">,</span><span class="nx">e</span><span class="p">(</span><span class="nx">d</span><span class="p">)).</span><span class="nx">addClass</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">validity</span><span class="p">.</span><span class="nx">outputs</span><span class="p">.</span><span class="nx">label</span><span class="p">.</span><span class="nx">cssClass</span><span class="p">).</span><span class="nx">text</span><span class="p">(</span><span class="nx">g</span><span class="p">).</span><span class="nx">click</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span></div><div class='line' id='LC33'><span class="nx">d</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">select</span><span class="p">()}).</span><span class="nx">insertAfter</span><span class="p">(</span><span class="nx">d</span><span class="p">)},</span><span class="nx">raiseAggregate</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">raise</span><span class="p">(</span><span class="nx">a</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">)),</span><span class="nx">e</span><span class="p">)}}})(</span><span class="nx">jQuery</span><span class="p">);</span></div><div class='line' id='LC34'><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">validity</span><span class="p">.</span><span class="nx">outputs</span><span class="p">.</span><span class="nx">modal</span><span class="o">=</span><span class="p">{</span><span class="nx">start</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="nx">a</span><span class="p">(</span><span class="s2">&quot;.validity-modal-msg&quot;</span><span class="p">).</span><span class="nx">remove</span><span class="p">()},</span><span class="nx">end</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">e</span><span class="p">.</span><span class="nx">valid</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">validity</span><span class="p">.</span><span class="nx">settings</span><span class="p">.</span><span class="nx">scrollTo</span><span class="p">)</span><span class="nx">location</span><span class="p">.</span><span class="nx">hash</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="s2">&quot;.validity-modal-msg:eq(0)&quot;</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;id&quot;</span><span class="p">)},</span><span class="nx">raise</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">offset</span><span class="p">();</span><span class="nx">e</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span><span class="nx">g</span><span class="o">=</span><span class="p">{</span><span class="nx">left</span><span class="o">:</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">left</span><span class="o">+</span><span class="nx">e</span><span class="p">.</span><span class="nx">width</span><span class="p">()</span><span class="o">+</span><span class="mi">4</span><span class="p">,</span><span class="mi">10</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">,</span><span class="nx">top</span><span class="o">:</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">top</span><span class="o">-</span><span class="mi">10</span><span class="p">,</span><span class="mi">10</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">};</span><span class="nx">a</span><span class="p">(</span><span class="s2">&quot;&lt;div/&gt;&quot;</span><span class="p">).</span><span class="nx">addClass</span><span class="p">(</span><span class="s2">&quot;validity-modal-msg&quot;</span><span class="p">).</span><span class="nx">css</span><span class="p">(</span><span class="nx">g</span><span class="p">).</span><span class="nx">text</span><span class="p">(</span><span class="nx">d</span><span class="p">).</span><span class="nx">click</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">validity</span><span class="p">.</span><span class="nx">settings</span><span class="p">.</span><span class="nx">modalErrorsClickable</span><span class="o">?</span><span class="kd">function</span><span class="p">(){</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">remove</span><span class="p">()}</span><span class="o">:</span><span class="kc">null</span><span class="p">).</span><span class="nx">appendTo</span><span class="p">(</span><span class="s2">&quot;body&quot;</span><span class="p">)}},</span></div><div class='line' id='LC35'><span class="nx">raiseAggregate</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">raise</span><span class="p">(</span><span class="nx">a</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">)),</span><span class="nx">d</span><span class="p">)}}})(</span><span class="nx">jQuery</span><span class="p">);</span></div><div class='line' id='LC36'><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="p">[];</span><span class="nx">a</span><span class="p">.</span><span class="nx">validity</span><span class="p">.</span><span class="nx">outputs</span><span class="p">.</span><span class="nx">summary</span><span class="o">=</span><span class="p">{</span><span class="nx">start</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="nx">a</span><span class="p">(</span><span class="s2">&quot;.validity-erroneous&quot;</span><span class="p">).</span><span class="nx">removeClass</span><span class="p">(</span><span class="s2">&quot;validity-erroneous&quot;</span><span class="p">);</span><span class="nx">e</span><span class="o">=</span><span class="p">[]},</span><span class="nx">end</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="nx">a</span><span class="p">(</span><span class="s2">&quot;.validity-summary-container&quot;</span><span class="p">).</span><span class="nx">hide</span><span class="p">().</span><span class="nx">find</span><span class="p">(</span><span class="s2">&quot;ul&quot;</span><span class="p">).</span><span class="nx">html</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="o">++</span><span class="nx">d</span><span class="p">)</span><span class="nx">a</span><span class="p">(</span><span class="s2">&quot;&lt;li/&gt;&quot;</span><span class="p">).</span><span class="nx">text</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="nx">d</span><span class="p">]).</span><span class="nx">appendTo</span><span class="p">(</span><span class="s2">&quot;.validity-summary-container ul&quot;</span><span class="p">);</span><span class="nx">a</span><span class="p">(</span><span class="s2">&quot;.validity-summary-container&quot;</span><span class="p">).</span><span class="nx">show</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">validity</span><span class="p">.</span><span class="nx">settings</span><span class="p">.</span><span class="nx">scrollTo</span><span class="p">)</span><span class="nx">location</span><span class="p">.</span><span class="nx">hash</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="s2">&quot;.validity-erroneous:eq(0)&quot;</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;id&quot;</span><span class="p">)}},</span><span class="nx">raise</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">g</span><span class="p">){</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">g</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="s2">&quot;validity-erroneous&quot;</span><span class="p">)},</span></div><div class='line' id='LC37'><span class="nx">raiseAggregate</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">raise</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">)},</span><span class="nx">container</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="nb">document</span><span class="p">.</span><span class="nx">write</span><span class="p">(</span><span class="s1">&#39;&lt;div class=&quot;validity-summary-container&quot;&gt;The form didn\&#39;t submit for the following reason(s):&lt;ul&gt;&lt;/ul&gt;&lt;/div&gt;&#39;</span><span class="p">)}}})(</span><span class="nx">jQuery</span><span class="p">);</span></div></pre></div>
          </td>
        </tr>
      </table>
  </div>

          </div>
        </div>

        <a href="#jump-to-line" rel="facebox" data-hotkey="l" class="js-jump-to-line" style="display:none">Jump to Line</a>
        <div id="jump-to-line" style="display:none">
          <h2>Jump to Line</h2>
          <form accept-charset="UTF-8" class="js-jump-to-line-form">
            <input class="textfield js-jump-to-line-field" type="text">
            <div class="full-button">
              <button type="submit" class="button">Go</button>
            </div>
          </form>
        </div>

      </div>
    </div>
</div>

<div id="js-frame-loading-template" class="frame frame-loading large-loading-area" style="display:none;">
  <img class="js-frame-loading-spinner" src="https://a248.e.akamai.net/assets.github.com/images/spinners/octocat-spinner-128.gif?1359500886" height="64" width="64">
</div>


        </div>
      </div>
      <div class="modal-backdrop"></div>
    </div>

      <div id="footer-push"></div><!-- hack for sticky footer -->
    </div><!-- end of wrapper - hack for sticky footer -->

      <!-- footer -->
      <div id="footer">
  <div class="container clearfix">

      <dl class="footer_nav">
        <dt>GitHub</dt>
        <dd><a href="https://github.com/about">About us</a></dd>
        <dd><a href="https://github.com/blog">Blog</a></dd>
        <dd><a href="https://github.com/contact">Contact &amp; support</a></dd>
        <dd><a href="http://enterprise.github.com/">GitHub Enterprise</a></dd>
        <dd><a href="http://status.github.com/">Site status</a></dd>
      </dl>

      <dl class="footer_nav">
        <dt>Applications</dt>
        <dd><a href="http://mac.github.com/">GitHub for Mac</a></dd>
        <dd><a href="http://windows.github.com/">GitHub for Windows</a></dd>
        <dd><a href="http://eclipse.github.com/">GitHub for Eclipse</a></dd>
        <dd><a href="http://mobile.github.com/">GitHub mobile apps</a></dd>
      </dl>

      <dl class="footer_nav">
        <dt>Services</dt>
        <dd><a href="http://get.gaug.es/">Gauges: Web analytics</a></dd>
        <dd><a href="http://speakerdeck.com">Speaker Deck: Presentations</a></dd>
        <dd><a href="https://gist.github.com">Gist: Code snippets</a></dd>
        <dd><a href="http://jobs.github.com/">Job board</a></dd>
      </dl>

      <dl class="footer_nav">
        <dt>Documentation</dt>
        <dd><a href="http://help.github.com/">GitHub Help</a></dd>
        <dd><a href="http://developer.github.com/">Developer API</a></dd>
        <dd><a href="http://github.github.com/github-flavored-markdown/">GitHub Flavored Markdown</a></dd>
        <dd><a href="http://pages.github.com/">GitHub Pages</a></dd>
      </dl>

      <dl class="footer_nav">
        <dt>More</dt>
        <dd><a href="http://training.github.com/">Training</a></dd>
        <dd><a href="https://github.com/edu">Students &amp; teachers</a></dd>
        <dd><a href="http://shop.github.com">The Shop</a></dd>
        <dd><a href="https://github.com/plans">Plans &amp; pricing</a></dd>
        <dd><a href="http://octodex.github.com/">The Octodex</a></dd>
      </dl>

      <hr class="footer-divider">


    <p class="right">&copy; 2013 <span title="0.05429s from fe19.rs.github.com">GitHub</span>, Inc. All rights reserved.</p>
    <a class="left" href="https://github.com/">
      <span class="mega-octicon octicon-mark-github"></span>
    </a>
    <ul id="legal">
        <li><a href="https://github.com/site/terms">Terms of Service</a></li>
        <li><a href="https://github.com/site/privacy">Privacy</a></li>
        <li><a href="https://github.com/security">Security</a></li>
    </ul>

  </div><!-- /.container -->

</div><!-- /.#footer -->


    <div class="fullscreen-overlay js-fullscreen-overlay" id="fullscreen_overlay">
  <div class="fullscreen-container js-fullscreen-container">
    <div class="textarea-wrap">
      <textarea name="fullscreen-contents" id="fullscreen-contents" class="js-fullscreen-contents" placeholder="" data-suggester="fullscreen_suggester"></textarea>
          <div class="suggester-container">
              <div class="suggester fullscreen-suggester js-navigation-container" id="fullscreen_suggester"
                 data-url="/whatgoodisaroad/validity/suggestions/commit">
              </div>
          </div>
    </div>
  </div>
  <div class="fullscreen-sidebar">
    <a href="#" class="exit-fullscreen js-exit-fullscreen tooltipped leftwards" title="Exit Zen Mode">
      <span class="mega-octicon octicon-screen-normal"></span>
    </a>
    <a href="#" class="theme-switcher js-theme-switcher tooltipped leftwards"
      title="Switch themes">
      <span class="octicon octicon-color-mode"></span>
    </a>
  </div>
</div>



    <div id="ajax-error-message" class="flash flash-error">
      <span class="octicon octicon-alert"></span>
      Something went wrong with that request. Please try again.
      <a href="#" class="octicon octicon-remove-close ajax-error-dismiss"></a>
    </div>

    
    
    <span id='server_response_time' data-time='0.05471' data-host='fe19'></span>
    
  </body>
</html>

